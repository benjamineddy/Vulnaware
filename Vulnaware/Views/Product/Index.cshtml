@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="page-wrapper">
    <br />
    <h2>Product Search</h2>
    <br />
    <div class="alert alert-success alert-dismissable" id="trackingSuccess" style="display:none;">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        Successfully tracked.
    </div>
    <div class="alert alert-danger alert-dismissable" id="trackingFailed" style="display:none;">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        Tracking failed, please try again.
    </div>
    <!-- Products datatable -->
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-green">
                <div class="panel-heading">
                    Products
                </div>
                <div class="panel-body">
                    <table class="table table-striped table-bordered table-hover" style="width:100%;" id="products">
                        <thead>
                            <tr>
                                <th>Product ID</th>
                                <th>Vendor</th>
                                <th>Name</th>
                                <th>Version</th>
                                <th>Update</th>
                                <th>Edition</th>
                                <th>Language</th>
                                <th>Date Added</th>
                                <th>Details/Tracking</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div id="action-configuration-div" style="display:none">
                    <img style="display:block; margin-left:auto; margin-right:auto" src="~/images/loader.gif" alt="Actioning..." />
                </div>
                <br />
            </div>
        </div>
        <form onsubmit="return false;">
            <div class="modal fade" id="trackingModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                            <h4 class="modal-title" id="myModalLabel">Select an existing configuration, or add a new one.</h4>
                        </div>
                        <div class="modal-body">
                            Existing Configurations
                            @if (SignInManager.IsSignedIn(User))
                            {
                                if (ViewBag.ConfigurationObjectList == null)
                                {
                                    <select class="form-control" id="existingConfigurationEmpty" disabled>
                                        <option selected="selected" value="0">No existing configurations</option>
                                    </select>
                                }
                                else
                                {
                                    <select class="form-control" id="existingConfiguration">
                                        @foreach (var item in ViewBag.ConfigurationObjectList)
                                        {
                                            <option value="@item.ConfigurationID">@item.ConfigurationName</option>
                                        }
                                    </select>
                                }
                            }
                            <br /><br />
                            <button type="button" class="btn btn-primary" onclick="ShowNewConfig();">New Configuration</button>
                            <br /><br />
                            <div id="newConfigDiv" style="display:none;">
                                New Configuration Name
                                <input class="form-control" id="newConfigurationName" required />
                                <br /><br />
                                Notes
                                <br />
                                <textarea class="form-control" rows="3" id="newConfigurationNotes"></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal" onclick="ModalReset();">Cancel</button>
                            <button type="submit" class="btn btn-primary" onclick="TrackProduct();">Track</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    @section scripts {
        @if (SignInManager.IsSignedIn(User))
        {
            <script>
                var isSignedIn = true;
            </script>
        }
        else
        {
            <script>
                var isSignedIn = false;
            </script>
        }
        <script>
            function ShowNewConfig() {
                document.getElementById("newConfigDiv").style.display = "";
                document.getElementById("existingConfiguration").disabled = true;
            }
        </script>
        <script>
            function ModalReset() {
                document.getElementById("newConfigDiv").style.display = "none";
                document.getElementById("existingConfiguration").disabled = false;
            }
        </script>
        <script>
            function ModalProductText(productID) {
                document.getElementById("myModalLabel").innerText = "Track " + productID;
                savedProductID = productID;
            }
        </script>
        <script>
            function TrackProduct() {
                var div = document.getElementById("newConfigDiv");
                if (div.style.display == "none") {
                    var dropdown = document.getElementById("existingConfiguration");
                    var existingConfigurationID = dropdown.options[dropdown.selectedIndex].value;
                    $.ajax({
                        url: '@Url.Action("TrackProductExistingConfiguration")',
                        type: "POST",
                        data: { existingID: existingConfigurationID, productID: savedProductID},
                        success: function (result) {
                            document.getElementById("trackingSuccess").style.display = "";
                            ModalReset();
                            $('#trackingModal').modal('hide');
                            setTimeout(function () {
                                $('#trackingSuccess').fadeOut('slow');
                            }, 5000);
                        },
                        error: function (data) {
                            document.getElementById("trackingFailed").style.display = "";
                            ModalReset();
                            $('#trackingModal').modal('hide');
                            setTimeout(function () {
                                $('#trackingSuccess').fadeOut('slow');
                            }, 5000);
                        }
                    })
                } else {
                    var configurationName = document.getElementById("newConfigurationName").value;
                    if (configurationName != "") {
                        var configurationNotes = document.getElementById("newConfigurationNotes").value;
                        $.ajax({
                            url: '@Url.Action("TrackProductNewConfiguration")',
                            type: "POST",
                            data: { newConfigurationName: configurationName, configurationNotes: configurationNotes, productID: savedProductID},
                            success: function (result) {
                                document.getElementById("trackingSuccess").style.display = "";
                                ModalReset();
                                $("#trackingModal").modal("hide");
                                setTimeout(function () {
                                    $('#trackingSuccess').fadeOut('slow');
                                }, 5000);
                            },
                            error: function (data) {
                                document.getElementById("trackingFailed").style.display = "";
                                ModalReset();
                                $('#trackingModal').modal('hide');
                                setTimeout(function () {
                                    $('#trackingSuccess').fadeOut('slow');
                                }, 5000);
                            }
                        })
                    }
                }
            }
        </script>
        <script>
            $(document).ready(function () {
                $("#products").DataTable({
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "orderMulti": false,
                    "scrollX": true,
                    "ajax": {
                        "url": "/Product/LoadIndexTableData",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "columnDefs":
                    [
                        {
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        },
                        {
                            "targets": [3, 4, 5, 6, 8],
                            "orderable": false
                        }
                    ],
                    "columns": [
                        { "data": "productID", "name": "ProductID", "autoWidth": true },
                        { "data": "vendor", "name": "Vendor", "autoWidth": true },
                        { "data": "productName", "name": "ProductName", "autoWidth": true },
                        { "data": "version", "name": "Version", "autoWidth": true },
                        { "data": "productUpdate", "name": "ProductUpdate", "autoWidth": true },
                        { "data": "edition", "name": "edition", "autoWidth": true },
                        { "data": "productLanguage", "name": "ProductLanguage", "autoWidth": true },
                        {
                            "name": "Added",
                            "render": function (data, type, full, meta) {
                                return new Date(full.added).toLocaleDateString("en-GB");
                            }
                        },
                        {
                            "render": function (data, type, full, meta) {
                                if (isSignedIn == true) {
                                    return '<a class="btn btn-info" href="/Product/Details/' + full.productID + '">Details</a> ' +
                                        '<button onclick="ModalProductText(' + full.productID + ');" id="' + full.productID + '" class="btn btn-primary" data-toggle="modal" data-target="#trackingModal">Track</button>';
                                } else {
                                    return '<a class="btn btn-info" href="/Product/Details/' + full.productID + '">Details</a>';
                                }
                            },
                            "width": 140
                        },
                    ]
                });
            });
        </script>
    }
</div>

